dest_data <- "~/Mimic/data/clean/"
df_long <- readRDS(paste0(dest_data,"numerics.rds"))
periode.episode <- function(data){
# sujet = "6294"
# fichier <- subset(df_long, id %in% sujet)
# data <- fichier
# AHE at least 2 minutes
drapeau <- 10
p = 1
mat_event = temp = event = NULL
somme = 0
data$time_and_date <- as.POSIXct(strptime(data$time_and_date,
"%Y-%m-%d %H:%M:%S"))
premier.point = as.POSIXlt(data$time_and_date)[1]
dernier.point = as.POSIXlt(data$time_and_date)[nrow(data)]
difference <- difftime(dernier.point, premier.point,units="hours")
nombre.periode = as.numeric(difference) * 60 /90
timebreak = premier.point + (seq(0,nombre.periode)*90*60)
data$fac = cut(data$time_and_date, breaks = timebreak,
labels = 1 : nombre.periode)
for ( i in levels(data$fac)){
# i = 3
temp <- base::subset(data, fac %in% i)
if(nrow(temp) >= 80){
debut_periode <- temp$time_and_date[1]
# Observation window
fin_periode_ecoute  <- debut_periode + 60 * 60
observation <- dplyr::filter(temp,(time_and_date >= debut_periode &
time_and_date < fin_periode_ecoute ))
observation$abpmean <- as.numeric(as.character(observation$abpmean))
for ( i in 1 : length(observation$abpmean)){
v <- ifelse(observation$abpmean[i] < 60 & observation$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in observation window
eevent <- ifelse(somme >= drapeau , 1, 0)
# Prediction window
zone.ahe <- debut_periode + 70 * 60
periode <- dplyr::filter(temp,(time_and_date >= zone.ahe &
time_and_date <= zone.ahe + 20 * 60))
periode$abpmean <- as.numeric(as.character(periode$abpmean))
for ( i in 1 : length(periode$abpmean)){
v <- ifelse(periode$abpmean[i] < 60 & periode$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in prediction window
event <- ifelse(somme >= drapeau , 1, 0)
mat_event <- c(mat_event,sujet,eevent,event,p,
as.character(debut_periode))
# Period number
p = p + 1
}
}
if(is.null(mat_event)) {
mat_event <- data.frame(matrix(NA,ncol = 5,byrow=T))
colnames(mat_event) <-c(names(temp),"eevent","event","periode","jour")
return(mat_event)}
else{
mat_event <- data.frame(matrix(mat_event,ncol=5,byrow = T))
colnames(mat_event) <- c("id","eevent","event","periode","jour")
mat_event$event <- as.numeric(as.character(mat_event[,'event']))
mat_event$periode <- as.numeric(as.character(mat_event[,'periode']))
mat_event$jour <- as.POSIXct(strptime(mat_event[,'jour'],"%Y-%m-%d %H:%M:%S"))
}
return(mat_event)
}
# Pour chaque patient
# Pour chaque patient
recherche.periode <- function (data){
#data <- df_long
all.recherche = NULL
v_id <- unique(data$id)
#v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
return(all.recherche)
}
res <- recherche.periode(df)
res <- recherche.periode(df_long)
#######################################################
#-------- Combiner les "numerics" et les données cliniques
# By Menyssa CHERIFA
# GITHUB : https://github.com/mcherifa/MIMIC
#######################################################
# chemin scripts R
dest_r <- "~/Mimic/scripts/R/toolbox/"
# chemin données
dest_data <- "~/Mimic/data/clean/"
source(paste0(dest_r,"packages.R"))
source(paste0(dest_r,"fonctions.R"))
source(paste0(dest_r,"to.balanced.R"))
#######################################################
# -------- Lecture
#######################################################
# Numerics
df_long <- readRDS(paste0(dest_data,"numerics.rds"))
# Infos de mimic 3
infos <- readRDS(paste0(dest_data,"infos_admission.RDS"))
# Données réactualisées
curare <- readRDS(paste0(dest_data,"curare.RDS"))
sedate <- readRDS(paste0(dest_data,"sedation.RDS"))
amine <- readRDS(paste0(dest_data,"amine.RDS"))
lactate <- readRDS(paste0(dest_data,"lactate.RDS"))
dialyse <- readRDS( paste0(dest_data,"dialyse.RDS"))
ventilation <- readRDS(paste0(dest_data,"ventilation.RDS"))
#######################################################
# Patients avec période d'enregistrement
# continue de 90 minutes
#######################################################
df_long[,c('hr','abpsys','abpmean','abpdias','spo2')] <- data.frame(
mapply(function(x){as.numeric(as.character(x))},
df_long[,c('hr','abpsys','abpmean','abpdias','spo2')]))
df_long$id <- as.numeric(as.character(df_long$id))
#
# v <- table(df_long$subject_id) > 90
# o <- subset(v, v==T)
# o <-  dimnames(o)[[1]]
# df_long <- subset(df_long, subject_id %in% o)  # 907 patients
#######################################################
# lol <- subset(df_long, subject_id %in% infos$subject_id)
#######################################################
# --------  Recherche episode hypotensif
# --------  Garde que les numérics en début de chaque période
#######################################################
recherche_episode <- recherche.periode(df_long)
data <- df_long
all.recherche = NULL
v_id <- unique(data$id)
v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
all.recherche
fichier <- subset(df_long, id == 10013 )
data <- melt(fichier,id = c("id","time_and_date"))
data$value <- as.numeric(as.character(data$value))
q <- ggplot(data,
mapping = aes(x = time_and_date, y = value, shape = variable, colour = variable)) +
geom_line() + theme_bw() + xlab("Temps") +
facet_grid(facets = variable ~ .) +
ggtitle(paste0("Numerics du patient : ", fichier$id ))
q
# chemin données
dest_data <- "~/Mimic/data/clean/"
df_long <- readRDS(paste0(dest_data,"numerics.rds"))
data <- df_long
all.recherche = NULL
v_id <- unique(data$id)
v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
all.recherche
View(fichier)
v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
sujet = "6294"
fichier <- subset(df_long, id %in% sujet)
data <- fichier
# AHE at least 2 minutes
drapeau <- 10
p = 1
mat_event = temp = event = NULL
somme = 0
data$time_and_date <- as.POSIXct(strptime(data$time_and_date,
"%Y-%m-%d %H:%M:%S"))
premier.point = as.POSIXlt(data$time_and_date)[1]
dernier.point = as.POSIXlt(data$time_and_date)[nrow(data)]
difference <- difftime(dernier.point, premier.point,units="hours")
nombre.periode = as.numeric(difference) * 60 /90
timebreak = premier.point + (seq(0,nombre.periode)*90*60)
data$fac = cut(data$time_and_date, breaks = timebreak,
labels = 1 : nombre.periode)
for ( i in levels(data$fac)){
# i = 3
temp <- base::subset(data, fac %in% i)
if(nrow(temp) >= 80){
debut_periode <- temp$time_and_date[1]
# Observation window
fin_periode_ecoute  <- debut_periode + 60 * 60
observation <- dplyr::filter(temp,(time_and_date >= debut_periode &
time_and_date < fin_periode_ecoute ))
observation$abpmean <- as.numeric(as.character(observation$abpmean))
for ( i in 1 : length(observation$abpmean)){
v <- ifelse(observation$abpmean[i] < 60 & observation$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in observation window
eevent <- ifelse(somme >= drapeau , 1, 0)
# Prediction window
zone.ahe <- debut_periode + 70 * 60
periode <- dplyr::filter(temp,(time_and_date >= zone.ahe &
time_and_date <= zone.ahe + 20 * 60))
periode$abpmean <- as.numeric(as.character(periode$abpmean))
for ( i in 1 : length(periode$abpmean)){
v <- ifelse(periode$abpmean[i] < 60 & periode$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in prediction window
event <- ifelse(somme >= drapeau , 1, 0)
mat_event <- c(mat_event,sujet,eevent,event,p,
as.character(debut_periode))
# Period number
p = p + 1
}
}
mat_event <- data.frame(matrix(mat_event,ncol=5,byrow = T))
colnames(mat_event) <- c("id","eevent","event","periode","jour")
mat_event$event <- as.numeric(as.character(mat_event[,'event']))
mat_event$periode <- as.numeric(as.character(mat_event[,'periode']))
mat_event$jour <- as.POSIXct(strptime(mat_event[,'jour'],"%Y-%m-%d %H:%M:%S"))
View(mat_event)
data <- df_long
#all.recherche = NULL
v_id <- unique(data$id)
v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
try(periode.episode(data = fichier),silent = T)
recherche
#######################################################
# Script with all R fonctions
#
# By Menyssa CHERIFA
# GITHUB : https://github.com/afroinshape/AHE.git
#######################################################
# chemin données
dest_data <- "~/Mimic/data/clean/"
df_long <- readRDS(paste0(dest_data,"numerics.rds"))
#######################################################
# Visualisation
#######################################################
visualisation.dygraph <- function(fichier){
data_xts <- as.xts(fichier[-1],
order.by = fichier$time_and_date, "%Y-%m-%d h:m:s")[,-1]
graphique <-  dygraph( data_xts ) %>%
dyRangeSelector()%>%
dyOptions(colors = RColorBrewer::brewer.pal(5, "Set2"), labelsUTC = T) %>%
dyHighlight(highlightCircleSize = 5,
highlightSeriesBackgroundAlpha = 0.2,
hideOnMouseOut = FALSE) %>%
dyLimit(60, color = "red")
return(graphique)
}
visualisation.ggplot <- function(fichier){
#fichier <- subset(df_long, id == 10013 )
data <- melt(fichier,id = c("id","time_and_date"))
data$value <- as.numeric(as.character(data$value))
q <- ggplot(data,
mapping = aes(x = time_and_date, y = value, shape = variable, colour = variable)) +
geom_line() + theme_bw() + xlab("Temps") +
facet_grid(facets = variable ~ .) +
ggtitle(paste0("Numerics du patient : ", fichier$id ))
return(q)
}
#######################################################
# Recherche episode hypotensif
#######################################################
periode.episode <- function(data){
sujet = "6294"
fichier <- subset(df_long, id %in% sujet)
data <- fichier
# AHE at least 2 minutes
drapeau <- 10
p = 1
mat_event = temp = event = NULL
somme = 0
data$time_and_date <- as.POSIXct(strptime(data$time_and_date,
"%Y-%m-%d %H:%M:%S"))
premier.point = as.POSIXlt(data$time_and_date)[1]
dernier.point = as.POSIXlt(data$time_and_date)[nrow(data)]
difference <- difftime(dernier.point, premier.point,units="hours")
nombre.periode = as.numeric(difference) * 60 /90
timebreak = premier.point + (seq(0,nombre.periode)*90*60)
data$fac = cut(data$time_and_date, breaks = timebreak,
labels = 1 : nombre.periode)
for ( i in levels(data$fac)){
# i = 3
temp <- base::subset(data, fac %in% i)
if(nrow(temp) >= 80){
debut_periode <- temp$time_and_date[1]
# Observation window
fin_periode_ecoute  <- debut_periode + 60 * 60
observation <- dplyr::filter(temp,(time_and_date >= debut_periode &
time_and_date < fin_periode_ecoute ))
observation$abpmean <- as.numeric(as.character(observation$abpmean))
for ( i in 1 : length(observation$abpmean)){
v <- ifelse(observation$abpmean[i] < 60 & observation$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in observation window
eevent <- ifelse(somme >= drapeau , 1, 0)
# Prediction window
zone.ahe <- debut_periode + 70 * 60
periode <- dplyr::filter(temp,(time_and_date >= zone.ahe &
time_and_date <= zone.ahe + 20 * 60))
periode$abpmean <- as.numeric(as.character(periode$abpmean))
for ( i in 1 : length(periode$abpmean)){
v <- ifelse(periode$abpmean[i] < 60 & periode$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in prediction window
event <- ifelse(somme >= drapeau , 1, 0)
mat_event <- c(mat_event,sujet,eevent,event,p,
as.character(debut_periode))
# Period number
p = p + 1
}
}
if(is.null(mat_event)) {
mat_event <- data.frame(matrix(NA,ncol = 5,byrow=T))
colnames(mat_event) <-c(names(temp),"eevent","event","periode","jour")
return(mat_event)}
else{
mat_event <- data.frame(matrix(mat_event,ncol=5,byrow = T))
colnames(mat_event) <- c("id","eevent","event","periode","jour")
mat_event$event <- as.numeric(as.character(mat_event[,'event']))
mat_event$periode <- as.numeric(as.character(mat_event[,'periode']))
mat_event$jour <- as.POSIXct(strptime(mat_event[,'jour'],"%Y-%m-%d %H:%M:%S"))
}
return(mat_event)
}
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
View(all.recherche)
recherche.periode <- function (data){
data <- df_long
#all.recherche = NULL
v_id <- unique(data$id)
#v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
return(all.recherche)
}
res <- recherche.periode(df_long)
View(res)
periode.episode <- function(data){
#sujet = "6294"
#fichier <- subset(df_long, id %in% sujet)
#data <- fichier
# AHE at least 2 minutes
drapeau <- 10
p = 1
mat_event = temp = event = NULL
somme = 0
data$time_and_date <- as.POSIXct(strptime(data$time_and_date,
"%Y-%m-%d %H:%M:%S"))
premier.point = as.POSIXlt(data$time_and_date)[1]
dernier.point = as.POSIXlt(data$time_and_date)[nrow(data)]
difference <- difftime(dernier.point, premier.point,units="hours")
nombre.periode = as.numeric(difference) * 60 /90
timebreak = premier.point + (seq(0,nombre.periode)*90*60)
data$fac = cut(data$time_and_date, breaks = timebreak,
labels = 1 : nombre.periode)
for ( i in levels(data$fac)){
# i = 3
temp <- base::subset(data, fac %in% i)
if(nrow(temp) >= 80){
debut_periode <- temp$time_and_date[1]
# Observation window
fin_periode_ecoute  <- debut_periode + 60 * 60
observation <- dplyr::filter(temp,(time_and_date >= debut_periode &
time_and_date < fin_periode_ecoute ))
observation$abpmean <- as.numeric(as.character(observation$abpmean))
for ( i in 1 : length(observation$abpmean)){
v <- ifelse(observation$abpmean[i] < 60 & observation$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in observation window
eevent <- ifelse(somme >= drapeau , 1, 0)
# Prediction window
zone.ahe <- debut_periode + 70 * 60
periode <- dplyr::filter(temp,(time_and_date >= zone.ahe &
time_and_date <= zone.ahe + 20 * 60))
periode$abpmean <- as.numeric(as.character(periode$abpmean))
for ( i in 1 : length(periode$abpmean)){
v <- ifelse(periode$abpmean[i] < 60 & periode$abpmean[i] > 0,1,0)
if(v == 1 ){somme <- somme + 1}
else {somme <- 0}
}
# AHE in prediction window
event <- ifelse(somme >= drapeau , 1, 0)
mat_event <- c(mat_event,sujet,eevent,event,p,
as.character(debut_periode))
# Period number
p = p + 1
}
}
if(is.null(mat_event)) {
mat_event <- data.frame(matrix(NA,ncol = 5,byrow=T))
colnames(mat_event) <-c(names(temp),"eevent","event","periode","jour")
return(mat_event)}
else{
mat_event <- data.frame(matrix(mat_event,ncol=5,byrow = T))
colnames(mat_event) <- c("id","eevent","event","periode","jour")
mat_event$event <- as.numeric(as.character(mat_event[,'event']))
mat_event$periode <- as.numeric(as.character(mat_event[,'periode']))
mat_event$jour <- as.POSIXct(strptime(mat_event[,'jour'],"%Y-%m-%d %H:%M:%S"))
}
return(mat_event)
}
# Pour chaque patient
recherche.periode <- function (data){
data <- df_long
#all.recherche = NULL
v_id <- unique(data$id)
#v_id = c(1,20,10013,6294)
for ( sujet in v_id ){
fichier <- base::subset(data, id %in% sujet)
print(sujet)
recherche <- try(periode.episode(data = fichier),silent = T)
if(attr(recherche ,"class")!="try-error"){
recherche$id <- rep(sujet,nrow(recherche))
all.recherche <- rbind(all.recherche,recherche)
}
}
return(all.recherche)
}
res <- recherche.periode(df_long)
View(res)
table(res$event)
setwd(dir = "~/Mimic/shiny")
source(file = "packages.R")
#######################################################
# -------- Lecture
#######################################################
temp = readRDS(file = "data/infos_par_periode.rds")
informations <- readRDS(file = "data/df_information.rds")
recherche    <- readRDS(file = "data/episode_periode_5.rds")
df_long.n    <- readRDS("data/numerics.rds")
carac        <- read.csv(file = "data/caracteristiques_patients.csv",
header = T,sep=",")
carac1       <- read.csv(file = "data/caracteristiques_periodes.csv",
header = T,sep=",")
projectName = "                     Panel Choices :  "
list_patients.n <- drop.levels(sort(unique(df_long.n$id)))
variables.n <- sort(colnames(df_long.n))
#######################################################
# -------- Panels
#######################################################
dashboard = T
visualise = T
contact = T
donnees = T
# DONE
print("config.R done.")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
